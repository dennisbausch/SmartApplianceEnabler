dist: bionic
sudo: required
language: java
jdk:
  - openjdk11
services:
  - docker
before_install:
  - sudo apt-get -y install ccrypt &&
    wget https://archive.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.zip &&
    unzip -qq apache-maven-3.3.9-bin.zip &&
    export M2_HOME=$PWD/apache-maven-3.3.9 &&
    export PATH=$M2_HOME/bin:$PATH &&
    mvn install:install-file -Dfile=lib/parent-1.0.0.pom -DpomFile=lib/parent-1.0.0.pom -Dpackaging=pom &&
    mvn install:install-file -Dfile=lib/seamless-http-1.0.0.jar -DpomFile=lib/seamless-http-1.0.0.pom &&
    mvn install:install-file -Dfile=lib/seamless-xml-1.0.0.jar -DpomFile=lib/seamless-xml-1.0.0.pom &&
    mvn install:install-file -Dfile=lib/seamless-util-1.0.0.jar -DpomFile=lib/seamless-util-1.0.0.pom &&
    mvn install:install-file -Dfile=lib/cling-2.0.0.pom -DpomFile=lib/cling-2.0.0.pom -Dpackaging=pom &&
    mvn install:install-file -Dfile=lib/cling-core-2.0.0.jar -DpomFile=lib/cling-core-2.0.0.pom &&
    wget https://nodejs.org/dist/v10.17.0/node-v10.17.0-linux-x64.tar.gz &&
    tar xfz node-v10.17.0-linux-x64.tar.gz &&
    wget https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip &&
    unzip awscli-exe-linux-x86_64.zip &&
    sudo ./aws/install &&
    export PATH=$PWD/node-v10.17.0-linux-x64/bin:$PATH
script:
  - ci/buildRaspiOsSaeImage.sh &&
    mvn package -B -Ptravis,web &&
    aws ec2 start-instances --instance-ids $AWS_INSTANCE_ID &&
    pushd docker &&
    cp ../target/SmartApplianceEnabler*.war sae-ci/SmartApplianceEnabler.war &&
    echo $DOCKERHUB_ACCESS_TOKEN | docker login --username avanux --password-stdin &&
    docker build --tag=avanux/smartapplianceenabler-amd64:ci ./sae-ci &&
    docker push avanux/smartapplianceenabler-amd64:ci &&
    popd &&
    pushd ci &&
    ccrypt -d -K $AWS_CRYPT_KEY aws.pem.cpt >/dev/null 2>&1 &&
    chmod 400 aws.pem &&
    sleep 20 &&
    export DEPLOY_HOST=`aws ec2 describe-instances | grep -m 1 PublicDnsName | awk -F '"' '{print $4}'` &&
    echo "DEPLOY_HOST=$DEPLOY_HOST" &&
    export E2E_TEST_URL=http://$DEPLOY_HOST &&
    ssh -i aws.pem -o StrictHostKeyChecking=no ec2-user@$DEPLOY_HOST 'bash -s' < pull_image.sh &&
    ssh -i aws.pem -o StrictHostKeyChecking=no ec2-user@$DEPLOY_HOST 'bash -s' < restart_container.sh &&
    popd &&
    pushd src/test/angular &&
    npm i &&
    export BROWSERSTACK_BUILD_ID=$TRAVIS_COMMIT &&
    node_modules/.bin/testcafe --page-load-timeout 10000 "browserstack:chrome@87.0:Windows 10" "src/*.spec.ts" &&
    popd &&
    pushd ci &&
    ssh -i aws.pem -o StrictHostKeyChecking=no ec2-user@$DEPLOY_HOST 'bash -s' < restart_container.sh &&
    popd &&
    pushd src/test/angular &&
    node_modules/.bin/testcafe --page-load-timeout 10000 "browserstack:firefox@83.0:Windows 10" "src/*.spec.ts" &&
    popd &&
    pushd ci &&
    ssh -i aws.pem -o StrictHostKeyChecking=no ec2-user@$DEPLOY_HOST 'bash -s' < restart_container.sh &&
    popd &&
    pushd src/test/angular &&
    node_modules/.bin/testcafe --page-load-timeout 10000 "browserstack:safari@13.1:OS X Catalina" "src/*.spec.ts" &&
    popd
  - |
    if [[ $TRAVIS_COMMIT_MESSAGE == *"release 1."* ]]; then
      pushd docker; ./amd64_check.sh
    else
      echo "*** Skipping docker push"
    fi
after_script:
  - aws ec2 stop-instances --instance-ids $AWS_INSTANCE_ID
after_success:
  - bash <(curl -s https://codecov.io/bash)
